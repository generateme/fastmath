
---
format:
  html:
    toc: true
    toc-depth: 5
    theme: [cosmo, ../../clay/custom.scss]
    toc-location: right
    anchor-sections: true
    reference-location: margin
    fontsize: 0.9em
    output-file: stats.html
fontsize: 0.9em
code-block-background: true

---
<style></style><style>.printedClojure .sourceCode {
  background-color: transparent;
  border-style: none;
}
</style><style>.clay-limit-image-width .clay-image {max-width: 100%}
</style>
<script src="stats_files/md-default0.js" type="text/javascript"></script><script src="stats_files/md-default1.js" type="text/javascript"></script>

::: {.sourceClojure}
```clojure
(ns stats
  (:require [fastmath.stats :as stats]

            [fastmath.dev.codox :as codox]))
```
:::



# Statistics {.unnumbered}


## Reference

### fastmath.stats

#### Statistics functions.

  * Descriptive statistics.
  * Correlation / covariance
  * Outliers
  * Confidence intervals
  * Extents
  * Effect size
  * Tests
  * Histogram
  * ACF/PACF
  * Bootstrap (see `fastmath.stats.bootstrap`)
  * Binary measures

  Functions are backed by Apache Commons Math or SMILE libraries. All work with Clojure sequences.

  ##### Descriptive statistics

  All in one function [stats-map](#LOS-stats-map) contains:

  * `:Size` - size of the samples, `(count ...)`
  * `:Min` - [minimum](#LOS-minimum) value
  * `:Max` - [maximum](#LOS-maximum) value
  * `:Range` - range of values
  * `:Mean` - [mean](#LOS-mean)/average
  * `:Median` - [median](#LOS-median), see also: [median-3](#LOS-median-3)
  * `:Mode` - [mode](#LOS-mode), see also: [modes](#LOS-modes)
  * `:Q1` - first quartile, use: [percentile](#LOS-percentile), [quartile](#LOS-quartile)
  * `:Q3` - third quartile, use: [percentile](#LOS-percentile), [quartile](#LOS-quartile)
  * `:Total` - [sum](#LOS-sum) of all samples
  * `:SD` - sample standard deviation
  * `:Variance` - variance
  * `:MAD` - [median-absolute-deviation](#LOS-median-absolute-deviation)
  * `:SEM` - standard error of mean
  * `:LAV` - lower adjacent value, use: [adjacent-values](#LOS-adjacent-values)
  * `:UAV` - upper adjacent value, use: [adjacent-values](#LOS-adjacent-values)
  * `:IQR` - interquartile range, `(- q3 q1)`
  * `:LOF` - lower outer fence, `(- q1 (* 3.0 iqr))`
  * `:UOF` - upper outer fence, `(+ q3 (* 3.0 iqr))`
  * `:LIF` - lower inner fence, `(- q1 (* 1.5 iqr))`
  * `:UIF` - upper inner fence, `(+ q3 (* 1.5 iqr))`
  * `:Outliers` - list of [outliers](#LOS-outliers), samples which are outside outer fences
  * `:Kurtosis` - [kurtosis](#LOS-kurtosis)
  * `:Skewness` - [skewness](#LOS-skewness)

  Note: [percentile](#LOS-percentile) and [quartile](#LOS-quartile) can have 10 different interpolation strategies. See [docs](http://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.html)


```{=html}
<span id="#LOS--&gt;confusion-matrix"></span>
```


#### ->confusion-matrix

+ `(->confusion-matrix tp fn fp tn)`
+ `(->confusion-matrix confusion-matrix)`
+ `(->confusion-matrix actual prediction)`
+ `(->confusion-matrix actual prediction encode-true)`

Convert input to confusion matrix


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2019">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-L0"></span>
```


#### L0

Count equal values in both seqs. Same as [count==](#LOS-count==)


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1101">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-L1"></span>
```


#### L1

+ `(L1 [vs1 vs2-or-val])`
+ `(L1 vs1 vs2-or-val)`

Manhattan distance


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1103">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-L2"></span>
```


#### L2

+ `(L2 [vs1 vs2-or-val])`
+ `(L2 vs1 vs2-or-val)`

Euclidean distance


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1117">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-L2sq"></span>
```


#### L2sq

+ `(L2sq [vs1 vs2-or-val])`
+ `(L2sq vs1 vs2-or-val)`

Squared euclidean distance


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1110">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-LInf"></span>
```


#### LInf

+ `(LInf [vs1 vs2-or-val])`
+ `(LInf vs1 vs2-or-val)`

Chebyshev distance


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1124">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-acf"></span>
```


#### acf

+ `(acf data)`
+ `(acf data lags)`

Calculate acf (autocorrelation function) for given number of lags or a list of lags.

  If lags is omitted function returns maximum possible number of lags.

  See also [acf-ci](#LOS-acf-ci), [pacf](#LOS-pacf), [pacf-ci](#LOS-pacf-ci)


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2179">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-acf-ci"></span>
```


#### acf-ci

+ `(acf-ci data)`
+ `(acf-ci data lags)`
+ `(acf-ci data lags alpha)`

[acf](#LOS-acf) with added confidence interval data.

  `:cis` contains list of calculated ci for every lag.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2238">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-ad-test-one-sample"></span>
```


#### ad-test-one-sample

+ `(ad-test-one-sample xs)`
+ `(ad-test-one-sample xs distribution-or-ys)`
+ `(ad-test-one-sample xs distribution-or-ys {:keys [sides kernel bandwidth], :or {sides :one-sided-greater, kernel :gaussian}})`

Anderson-Darling test


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L3011">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-adjacent-values"></span>
```


#### adjacent-values

+ `(adjacent-values vs)`
+ `(adjacent-values vs estimation-strategy)`
+ `(adjacent-values vs q1 q3 m)`

Lower and upper adjacent values (LAV and UAV).

  Let Q1 is 25-percentile and Q3 is 75-percentile. IQR is `(- Q3 Q1)`.

  * LAV is smallest value which is greater or equal to the LIF = `(- Q1 (* 1.5 IQR))`.
  * UAV is largest value which is lower or equal to the UIF = `(+ Q3 (* 1.5 IQR))`.
  * third value is a median of samples


  Optional `estimation-strategy` argument can be set to change quantile calculations estimation type. See [estimation-strategies](#LOS-estimation-strategies).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L458">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-ameasure"></span>
```


#### ameasure

+ `(ameasure [group1 group2])`
+ `(ameasure group1 group2)`

Vargha-Delaney A measure for two populations a and b


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1597">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-binary-measures"></span>
```


#### binary-measures

+ `(binary-measures tp fn fp tn)`
+ `(binary-measures confusion-matrix)`
+ `(binary-measures actual prediction)`
+ `(binary-measures actual prediction true-value)`

Subset of binary measures. See [binary-measures-all](#LOS-binary-measures-all).

  Following keys are returned: `[:tp :tn :fp :fn :accuracy :fdr :f-measure :fall-out :precision :recall :sensitivity :specificity :prevalence]`


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2061">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-binary-measures-all"></span>
```


#### binary-measures-all

+ `(binary-measures-all tp fn fp tn)`
+ `(binary-measures-all confusion-matrix)`
+ `(binary-measures-all actual prediction)`
+ `(binary-measures-all actual prediction true-value)`

Collection of binary measures.

  Arguments:
  * `confusion-matrix` - either map or sequence with `[:tp :fn :fp :tn]` values
  
  or

  * `actual` - list of ground truth values
  * `prediction` - list of predicted values
  * `true-value` - optional, true/false encoding, what is true in `truth` and `prediction`

  `true-value` can be one of:

  * `nil` - values are treating as booleans
  * any sequence - values from sequence will be treated as `true`
  * map - conversion will be done according to provided map (if there is no correspondin key, value is treated as `false`)
  * any predicate

  https://en.wikipedia.org/wiki/Precision_and_recall


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2029">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-binomial-ci"></span>
```


#### binomial-ci

+ `(binomial-ci number-of-successes number-of-trials)`
+ `(binomial-ci number-of-successes number-of-trials method)`
+ `(binomial-ci number-of-successes number-of-trials method alpha)`

Return confidence interval for a binomial distribution.

  Possible methods are:
  * `:asymptotic` (normal aproximation, based on central limit theorem), default
  * `:agresti-coull`
  * `:clopper-pearson`
  * `:wilson`
  * `:prop.test` - one sample proportion test
  * `:cloglog`
  * `:logit`
  * `:probit`
  * `:arcsine`
  * `:all` - apply all methods and return a map of triplets

  Default alpha is 0.05
  
  Returns a triple [lower ci, upper ci, p=successes/trials]


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2319">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-binomial-ci-methods"></span>
```


#### binomial-ci-methods


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2316">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-binomial-test"></span>
```


#### binomial-test

+ `(binomial-test xs)`
+ `(binomial-test xs maybe-params)`
+ `(binomial-test number-of-successes number-of-trials {:keys [alpha p ci-method sides], :or {alpha 0.05, p 0.5, ci-method :asymptotic, sides :two-sided}})`

Binomial test

  * `alpha` - significance level (default: `0.05`)
  * `sides` - one of: `:two-sided` (default), `:one-sided-less` (short: `:one-sided`) or `:one-sided-greater`
  * `ci-method` - see [binomial-ci-methods](#LOS-binomial-ci-methods)
  * `p` - tested probability


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2541">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-bootstrap"></span>
```


#### bootstrap ^~DEPRECATED~^

*Deprecated: Please use fastmath.stats.bootstrap/bootstrap instead*

+ `(bootstrap vs)`
+ `(bootstrap vs samples)`
+ `(bootstrap vs samples size)`

Generate set of samples of given size from provided data.

  Default `samples` is 200, number of `size` defaults to sample size.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L851">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-bootstrap-ci"></span>
```


#### bootstrap-ci ^~DEPRECATED~^

*Deprecated: Please use fastmath.stats.boostrap/ci-basic instead*

+ `(bootstrap-ci vs)`
+ `(bootstrap-ci vs alpha)`
+ `(bootstrap-ci vs alpha samples)`
+ `(bootstrap-ci vs alpha samples stat-fn)`

Bootstrap method to calculate confidence interval.

  Alpha defaults to 0.98, samples to 1000.
  Last parameter is statistical function used to measure, default: [mean](#LOS-mean).

  Returns ci and statistical function value.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L830">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-brown-forsythe-test"></span>
```


#### brown-forsythe-test

+ `(brown-forsythe-test xss)`
+ `(brown-forsythe-test xss params)`


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2973">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-chisq-test"></span>
```


#### chisq-test

+ `(chisq-test contingency-table-or-xs)`
+ `(chisq-test contingency-table-or-xs params)`

Chi square test, a power divergence test for `lambda` 1.0

Power divergence test.

  First argument should be one of:
  
  * contingency table
  * sequence of counts (for goodness of fit)
  * sequence of data (for goodness of fit against distribution)

  For goodness of fit there are two options:
  
  * comparison of observed counts vs expected probabilities or weights (`:p`)
  * comparison of data against given distribution (`:p`), in this case histogram from data is created and compared to distribution PDF in bins ranges. Use `:bins` option to control histogram creation.

  Options are:
  
  * `:lambda` - test type:
      * `1.0` - [chisq-test](#LOS-chisq-test)
      * `0.0` - [multinomial-likelihood-ratio-test](#LOS-multinomial-likelihood-ratio-test)
      * `-1.0` - [minimum-discrimination-information-test](#LOS-minimum-discrimination-information-test)
      * `-2.0` - [neyman-modified-chisq-test](#LOS-neyman-modified-chisq-test)
      * `-0.5` - [freeman-tukey-test](#LOS-freeman-tukey-test)
      * `2/3` - [cressie-read-test](#LOS-cressie-read-test) - default
  * `:p` - probabilites, weights or distribution object.
  * `:alpha` - significance level (default: 0.05)
  * `:ci-sides` - confidence interval sides (default: `:two-sided`)
  * `:sides`  - p-value sides (`:two-sided`, `:one-side-greater` - default, `:one-side-less`)
  * `:bootstrap-samples` - number of samples to estimate confidence intervals (default: 1000)
  * `:ddof` - delta degrees of freedom, adjustment for dof (default: 0.0)
  * `:bins` - number of bins or estimator name for histogram


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2888">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-ci"></span>
```


#### ci

+ `(ci vs)`
+ `(ci vs alpha)`

T-student based confidence interval for given data. Alpha value defaults to 0.05.

  Last value is mean.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L815">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-cliffs-delta"></span>
```


#### cliffs-delta

+ `(cliffs-delta [group1 group2])`
+ `(cliffs-delta group1 group2)`

Cliff's delta effect size for ordinal data.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1586">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-coefficient-matrix"></span>
```


#### coefficient-matrix

+ `(coefficient-matrix vss)`
+ `(coefficient-matrix vss measure-fn)`
+ `(coefficient-matrix vss measure-fn symmetric?)`

Generate coefficient (correlation, covariance, any two arg function) matrix from seq of seqs. Row order.

  Default method: pearson-correlation


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1000">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-cohens-d"></span>
```


#### cohens-d

+ `(cohens-d [group1 group2])`
+ `(cohens-d group1 group2)`
+ `(cohens-d group1 group2 method)`

Cohen's d effect size for two groups


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1505">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-cohens-d-corrected"></span>
```


#### cohens-d-corrected

+ `(cohens-d-corrected [group1 group2])`
+ `(cohens-d-corrected group1 group2)`
+ `(cohens-d-corrected group1 group2 method)`

Cohen's d corrected for small group size


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1519">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-cohens-f"></span>
```


#### cohens-f

+ `(cohens-f [group1 group2])`
+ `(cohens-f group1 group2)`
+ `(cohens-f group1 group2 type)`

Cohens f, sqrt of Cohens f2.

  Possible `type` values are: `:eta` (default), `:omega` and `:epsilon`.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1729">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-cohens-f2"></span>
```


#### cohens-f2

+ `(cohens-f2 [group1 group2])`
+ `(cohens-f2 group1 group2)`
+ `(cohens-f2 group1 group2 type)`

Cohens f2, by default based on `eta-sq`.

  Possible `type` values are: `:eta` (default), `:omega` and `:epsilon`.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1715">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-cohens-kappa"></span>
```


#### cohens-kappa

+ `(cohens-kappa group1 group2)`
+ `(cohens-kappa contingency-table)`

Cohens kappa


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1863">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-cohens-q"></span>
```


#### cohens-q

+ `(cohens-q r1 r2)`
+ `(cohens-q group1 group2a group2b)`
+ `(cohens-q group1a group2a group1b group2b)`

Comparison of two correlations.

  Arity:

  * 2 - compare two correlation values
  * 3 - compare correlation of `group1` and `group2a` with correlation of `group1` and `group2b`
  * 4 - compare correlation of first two arguments with correlation of last two arguments


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1737">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-cohens-u2"></span>
```


#### cohens-u2

+ `(cohens-u2 [group1 group2])`
+ `(cohens-u2 group1 group2)`
+ `(cohens-u2 group1 group2 estimation-strategy)`

Cohen's U2, the proportion of one of the groups that exceeds the same proportion in the other group.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1641">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-cohens-u3"></span>
```


#### cohens-u3

+ `(cohens-u3 [group1 group2])`
+ `(cohens-u3 group1 group2)`
+ `(cohens-u3 group1 group2 estimation-strategy)`

Cohen's U3, the proportion of the second group that is smaller than the median of the first group.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1658">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-cohens-w"></span>
```


#### cohens-w

+ `(cohens-w group1 group2)`
+ `(cohens-w contingency-table)`

Cohen's W effect size for discrete data.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1848">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-contingency-2x2-measures"></span>
```


#### contingency-2x2-measures

+ `(contingency-2x2-measures & args)`


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2166">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-contingency-2x2-measures-all"></span>
```


#### contingency-2x2-measures-all

+ `(contingency-2x2-measures-all a b c d)`
+ `(contingency-2x2-measures-all map-or-seq)`
+ `(contingency-2x2-measures-all [a b] [c d])`


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2157">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-contingency-table"></span>
```


#### contingency-table

+ `(contingency-table & seqs)`

Returns frequencies map of tuples built from seqs.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1771">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-contingency-table-&gt;marginals"></span>
```


#### contingency-table->marginals

+ `(contingency-table->marginals ct)`


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1792">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-correlation"></span>
```


#### correlation

+ `(correlation [vs1 vs2])`
+ `(correlation vs1 vs2)`

Correlation of two sequences.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L952">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-correlation-matrix"></span>
```


#### correlation-matrix

+ `(correlation-matrix vss)`
+ `(correlation-matrix vss measure)`

Generate correlation matrix from seq of seqs. Row order.

  Possible measures: `:pearson` (default), `:kendall`, `:spearman`.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1022">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-count="></span>
```


#### count=

+ `(count= [vs1 vs2-or-val])`
+ `(count= vs1 vs2-or-val)`

Count equal values in both seqs. Same as [L0](#LOS-L0)


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1094">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-covariance"></span>
```


#### covariance

+ `(covariance [vs1 vs2])`
+ `(covariance vs1 vs2)`

Covariance of two sequences.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L942">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-covariance-matrix"></span>
```


#### covariance-matrix

+ `(covariance-matrix vss)`

Generate covariance matrix from seq of seqs. Row order.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1033">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-cramers-c"></span>
```


#### cramers-c

+ `(cramers-c group1 group2)`
+ `(cramers-c contingency-table)`

Cramer's C effect size for discrete data.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1819">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-cramers-v"></span>
```


#### cramers-v

+ `(cramers-v group1 group2)`
+ `(cramers-v contingency-table)`

Cramer's V effect size for discrete data.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1826">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-cramers-v-corrected"></span>
```


#### cramers-v-corrected

+ `(cramers-v-corrected group1 group2)`
+ `(cramers-v-corrected contingency-table)`

Corrected Cramer's V


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1834">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-cressie-read-test"></span>
```


#### cressie-read-test

+ `(cressie-read-test contingency-table-or-xs)`
+ `(cressie-read-test contingency-table-or-xs params)`

Cressie-Read test, a power divergence test for `lambda` 2/3

Power divergence test.

  First argument should be one of:
  
  * contingency table
  * sequence of counts (for goodness of fit)
  * sequence of data (for goodness of fit against distribution)

  For goodness of fit there are two options:
  
  * comparison of observed counts vs expected probabilities or weights (`:p`)
  * comparison of data against given distribution (`:p`), in this case histogram from data is created and compared to distribution PDF in bins ranges. Use `:bins` option to control histogram creation.

  Options are:
  
  * `:lambda` - test type:
      * `1.0` - [chisq-test](#LOS-chisq-test)
      * `0.0` - [multinomial-likelihood-ratio-test](#LOS-multinomial-likelihood-ratio-test)
      * `-1.0` - [minimum-discrimination-information-test](#LOS-minimum-discrimination-information-test)
      * `-2.0` - [neyman-modified-chisq-test](#LOS-neyman-modified-chisq-test)
      * `-0.5` - [freeman-tukey-test](#LOS-freeman-tukey-test)
      * `2/3` - [cressie-read-test](#LOS-cressie-read-test) - default
  * `:p` - probabilites, weights or distribution object.
  * `:alpha` - significance level (default: 0.05)
  * `:ci-sides` - confidence interval sides (default: `:two-sided`)
  * `:sides`  - p-value sides (`:two-sided`, `:one-side-greater` - default, `:one-side-less`)
  * `:bootstrap-samples` - number of samples to estimate confidence intervals (default: 1000)
  * `:ddof` - delta degrees of freedom, adjustment for dof (default: 0.0)
  * `:bins` - number of bins or estimator name for histogram


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2918">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-demean"></span>
```


#### demean

+ `(demean vs)`

Subtract mean from sequence


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L925">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-dissimilarity"></span>
```


#### dissimilarity

+ `(dissimilarity method P-observed Q-expected)`
+ `(dissimilarity method P-observed Q-expected {:keys [bins probabilities? epsilon log-base power remove-zeros?], :or {probabilities? true, epsilon 1.0E-6, log-base m/E, power 2.0}})`

Various PDF distance between two histograms (frequencies) or probabilities.

  Q can be a distribution object. Then, histogram will be created out of P.

  Arguments:

  * `method` - distance method
  * `P-observed` - frequencies, probabilities or actual data (when Q is a distribution of `:bins` is set)
  * `Q-expected` - frequencies, probabilities or distribution object (when P is a data or `:bins` is set)

  Options:

  * `:probabilities?` - should P/Q be converted to a probabilities, default: `true`.
  * `:epsilon` - small number which replaces `0.0` when division or logarithm is used`
  * `:log-base` - base for logarithms, default: `e`
  * `:power` - exponent for `:minkowski` distance, default: `2.0`
  * `:bins` - number of bins or bins estimation method, see [histogram](#LOS-histogram).

  The list of methods: `:euclidean`, `:city-block`, `:manhattan`, `:chebyshev`, `:minkowski`, `:sorensen`, `:gower`, `:soergel`, `:kulczynski`, `:canberra`, `:lorentzian`, `:non-intersection`, `:wave-hedges`, `:czekanowski`, `:motyka`, `:tanimoto`, `:jaccard`, `:dice`, `:bhattacharyya`, `:hellinger`, `:matusita`, `:squared-chord`, `:euclidean-sq`, `:squared-euclidean`, `:pearson-chisq`, `:chisq`, `:neyman-chisq`, `:squared-chisq`, `:symmetric-chisq`, `:divergence`, `:clark`, `:additive-symmetric-chisq`, `:kullback-leibler`, `:jeffreys`, `:k-divergence`, `:topsoe`, `:jensen-shannon`, `:jensen-difference`, `:taneja`, `:kumar-johnson`, `:avg`

  See more: Comprehensive Survey on Distance/Similarity Measures between Probability Density Functions by Sung-Hyuk Cha


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1325">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-durbin-watson"></span>
```


#### durbin-watson

+ `(durbin-watson rs)`

Lag-1 Autocorrelation test for residuals


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1903">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-epsilon-sq"></span>
```


#### epsilon-sq

+ `(epsilon-sq [group1 group2])`
+ `(epsilon-sq group1 group2)`

Less biased R2


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1707">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-estimate-bins"></span>
```


#### estimate-bins

+ `(estimate-bins vs)`
+ `(estimate-bins vs bins-or-estimate-method)`

Estimate number of bins for histogram.

  Possible methods are: `:sqrt` `:sturges` `:rice` `:doane` `:scott` `:freedman-diaconis` (default).

  The number returned is not higher than number of samples.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1153">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-estimation-strategies-list"></span>
```


#### estimation-strategies-list

List of estimation strategies for [percentile](#LOS-percentile)/[quantile](#LOS-quantile) functions.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L71">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-eta-sq"></span>
```


#### eta-sq

+ `(eta-sq [group1 group2])`
+ `(eta-sq group1 group2)`

R2, coefficient of determination


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1687">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-extent"></span>
```


#### extent

+ `(extent vs)`

Return extent (min, max, mean) values from sequence


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L625">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-f-test"></span>
```


#### f-test

+ `(f-test xs ys)`
+ `(f-test xs ys {:keys [sides alpha], :or {sides :two-sided, alpha 0.05}})`

Variance F-test of two samples.

  * `alpha` - significance level (default: `0.05`)
  * `sides` - one of: `:two-sided` (default), `:one-sided-less` (short: `:one-sided`) or `:one-sided-greater` 


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2744">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-fligner-killeen-test"></span>
```


#### fligner-killeen-test

+ `(fligner-killeen-test xss)`
+ `(fligner-killeen-test xss {:keys [sides], :or {sides :one-sided-greater}})`


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2977">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-freeman-tukey-test"></span>
```


#### freeman-tukey-test

+ `(freeman-tukey-test contingency-table-or-xs)`
+ `(freeman-tukey-test contingency-table-or-xs params)`

Freeman-Tukey test, a power divergence test for `lambda` -0.5

Power divergence test.

  First argument should be one of:
  
  * contingency table
  * sequence of counts (for goodness of fit)
  * sequence of data (for goodness of fit against distribution)

  For goodness of fit there are two options:
  
  * comparison of observed counts vs expected probabilities or weights (`:p`)
  * comparison of data against given distribution (`:p`), in this case histogram from data is created and compared to distribution PDF in bins ranges. Use `:bins` option to control histogram creation.

  Options are:
  
  * `:lambda` - test type:
      * `1.0` - [chisq-test](#LOS-chisq-test)
      * `0.0` - [multinomial-likelihood-ratio-test](#LOS-multinomial-likelihood-ratio-test)
      * `-1.0` - [minimum-discrimination-information-test](#LOS-minimum-discrimination-information-test)
      * `-2.0` - [neyman-modified-chisq-test](#LOS-neyman-modified-chisq-test)
      * `-0.5` - [freeman-tukey-test](#LOS-freeman-tukey-test)
      * `2/3` - [cressie-read-test](#LOS-cressie-read-test) - default
  * `:p` - probabilites, weights or distribution object.
  * `:alpha` - significance level (default: 0.05)
  * `:ci-sides` - confidence interval sides (default: `:two-sided`)
  * `:sides`  - p-value sides (`:two-sided`, `:one-side-greater` - default, `:one-side-less`)
  * `:bootstrap-samples` - number of samples to estimate confidence intervals (default: 1000)
  * `:ddof` - delta degrees of freedom, adjustment for dof (default: 0.0)
  * `:bins` - number of bins or estimator name for histogram


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2912">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-geomean"></span>
```


#### geomean

+ `(geomean vs)`
+ `(geomean vs weights)`

Geometric mean for positive values only with optional `weights`


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L230">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-glass-delta"></span>
```


#### glass-delta

+ `(glass-delta [group1 group2])`
+ `(glass-delta group1 group2)`

Glass's delta effect size for two groups


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1554">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-harmean"></span>
```


#### harmean

+ `(harmean vs)`
+ `(harmean vs weights)`

Harmonic mean with optional `weights`


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L235">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-hedges-g"></span>
```


#### hedges-g

+ `(hedges-g [group1 group2])`
+ `(hedges-g group1 group2)`

Hedges's g effect size for two groups


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1531">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-hedges-g*"></span>
```


#### hedges-g*

+ `(hedges-g* [group1 group2])`
+ `(hedges-g* group1 group2)`

Less biased Hedges's g effect size for two groups, J term correction.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1543">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-hedges-g-corrected"></span>
```


#### hedges-g-corrected

+ `(hedges-g-corrected [group1 group2])`
+ `(hedges-g-corrected group1 group2)`

Cohen's d corrected for small group size


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1537">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-histogram"></span>
```


#### histogram

+ `(histogram vs)`
+ `(histogram vs bins-or-estimate-method)`
+ `(histogram vs bins-or-estimate-method [mn mx])`
+ `(histogram vs bins-or-estimate-method mn mx)`

Calculate histogram.

  Estimation method can be a number, named method: `:sqrt` `:sturges` `:rice` `:doane` `:scott` `:freedman-diaconis` (default) or a sequence of points used as intervals.
  In the latter case or when `mn` and `mx` values are provided - data will be filtered to fit in desired interval(s).

  Returns map with keys:

  * `:size` - number of bins
  * `:step` - average distance between bins
  * `:bins` - seq of pairs of range lower value and number of elements
  * `:min` - min value
  * `:max` - max value
  * `:samples` - number of used samples
  * `:frequencies` - a map containing counts for bin's average
  * `:intervals` - intervals used to create bins
  * `:bins-maps` - seq of maps containing:
    * `:min` - lower bound
    * `:max` - upper bound
    * `:step` - actual distance between bins 
    * `:count` - number of elements
    * `:avg` - average value
    * `:probability` - probability for bin

  If difference between min and max values is `0`, number of bins is set to 1.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1228">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-hpdi-extent"></span>
```


#### hpdi-extent

+ `(hpdi-extent vs)`
+ `(hpdi-extent vs size)`

Higher Posterior Density interval + median.

  `size` parameter is the target probability content of the interval.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L429">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-inner-fence-extent"></span>
```


#### inner-fence-extent

+ `(inner-fence-extent vs)`
+ `(inner-fence-extent vs estimation-strategy)`

Returns LIF, UIF and median


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L485">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-iqr"></span>
```


#### iqr

+ `(iqr vs)`
+ `(iqr vs estimation-strategy)`

Interquartile range.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L451">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-jarque-bera-test"></span>
```


#### jarque-bera-test

+ `(jarque-bera-test xs)`
+ `(jarque-bera-test xs params)`
+ `(jarque-bera-test xs skew kurt {:keys [sides], :or {sides :one-sided-greater}})`

Goodness of fit test whether skewness and kurtosis of data match normal distribution


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2526">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-jensen-shannon-divergence"></span>
```


#### jensen-shannon-divergence ^~DEPRECATED~^

*Deprecated: Use [dissimilarity](#LOS-dissimilarity).*

+ `(jensen-shannon-divergence [vs1 vs2])`
+ `(jensen-shannon-divergence vs1 vs2)`

Jensen-Shannon divergence of two sequences.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L992">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-kendall-correlation"></span>
```


#### kendall-correlation

+ `(kendall-correlation [vs1 vs2])`
+ `(kendall-correlation vs1 vs2)`

Kendall's correlation of two sequences.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L977">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-kruskal-test"></span>
```


#### kruskal-test

+ `(kruskal-test xss)`
+ `(kruskal-test xss {:keys [sides], :or {sides :right}})`

Kruskal-Wallis rank sum test.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L3079">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-ks-test-one-sample"></span>
```


#### ks-test-one-sample

+ `(ks-test-one-sample xs)`
+ `(ks-test-one-sample xs distribution-or-ys)`
+ `(ks-test-one-sample xs distribution-or-ys {:keys [sides kernel bandwidth distinct?], :or {sides :two-sided, kernel :gaussian, distinct? true}})`

One sample Kolmogorov-Smirnov test


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L3028">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-ks-test-two-samples"></span>
```


#### ks-test-two-samples

+ `(ks-test-two-samples xs ys)`
+ `(ks-test-two-samples xs ys {:keys [sides distinct?], :or {sides :two-sided, distinct? true}})`

Two samples Kolmogorov-Smirnov test


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L3054">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-kullback-leibler-divergence"></span>
```


#### kullback-leibler-divergence ^~DEPRECATED~^

*Deprecated: Use [dissimilarity](#LOS-dissimilarity).*

+ `(kullback-leibler-divergence [vs1 vs2])`
+ `(kullback-leibler-divergence vs1 vs2)`

Kullback-Leibler divergence of two sequences.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L983">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-kurtosis"></span>
```


#### kurtosis

+ `(kurtosis vs)`
+ `(kurtosis vs typ)`

Calculate kurtosis from sequence.

  Possible typs: `:G2` (default), `:g2` (or `:excess`), `:geary`, ,`:crow`, `:moors`, `:hogg` or `:kurt`.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L788">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-kurtosis-test"></span>
```


#### kurtosis-test

+ `(kurtosis-test xs)`
+ `(kurtosis-test xs params)`
+ `(kurtosis-test xs kurt {:keys [sides type], :or {sides :two-sided, type :kurt}})`

Normality test for kurtosis


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2483">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-levene-test"></span>
```


#### levene-test

+ `(levene-test xss)`
+ `(levene-test xss {:keys [sides statistic scorediff], :or {sides :one-sided-greater, statistic mean, scorediff abs}})`


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2962">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-mad"></span>
```


#### mad

Alias for [median-absolute-deviation](#LOS-median-absolute-deviation)


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L349">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-mad-extent"></span>
```


#### mad-extent

+ `(mad-extent vs)`

 -/+ median-absolute-deviation and median


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L376">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-mae"></span>
```


#### mae

+ `(mae [vs1 vs2-or-val])`
+ `(mae vs1 vs2-or-val)`

Mean absolute error


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1046">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-mape"></span>
```


#### mape

+ `(mape [vs1 vs2-or-val])`
+ `(mape vs1 vs2-or-val)`

Mean absolute percentage error


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1053">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-maximum"></span>
```


#### maximum

+ `(maximum vs)`

Maximum value from sequence.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L612">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-mcc"></span>
```


#### mcc

+ `(mcc group1 group2)`
+ `(mcc ct)`

Matthews correlation coefficient also known as phi coefficient.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1804">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-me"></span>
```


#### me

+ `(me [vs1 vs2-or-val])`
+ `(me vs1 vs2-or-val)`

Mean error


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1039">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-mean"></span>
```


#### mean

+ `(mean vs)`
+ `(mean vs weights)`

Calculate mean of `vs` with optional `weights`.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L225">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-mean-absolute-deviation"></span>
```


#### mean-absolute-deviation

+ `(mean-absolute-deviation vs)`
+ `(mean-absolute-deviation vs center)`

Calculate mean absolute deviation


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L352">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-means-ratio"></span>
```


#### means-ratio

+ `(means-ratio [group1 group2])`
+ `(means-ratio group1 group2)`
+ `(means-ratio group1 group2 adjusted?)`

Means ratio


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1561">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-means-ratio-corrected"></span>
```


#### means-ratio-corrected

+ `(means-ratio-corrected [group1 group2])`
+ `(means-ratio-corrected group1 group2)`

Bias correced means ratio


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1580">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-median"></span>
```


#### median

+ `(median vs estimation-strategy)`
+ `(median vs)`

Calculate median of `vs`. See [median-3](#LOS-median-3).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L213">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-median-3"></span>
```


#### median-3

+ `(median-3 a b c)`

Median of three values. See [median](#LOS-median).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L220">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-median-absolute-deviation"></span>
```


#### median-absolute-deviation

+ `(median-absolute-deviation vs)`
+ `(median-absolute-deviation vs center)`
+ `(median-absolute-deviation vs center estimation-strategy)`

Calculate MAD


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L339">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-minimum"></span>
```


#### minimum

+ `(minimum vs)`

Minimum value from sequence.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L605">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-minimum-discrimination-information-test"></span>
```


#### minimum-discrimination-information-test

+ `(minimum-discrimination-information-test contingency-table-or-xs)`
+ `(minimum-discrimination-information-test contingency-table-or-xs params)`

Minimum discrimination information test, a power divergence test for `lambda` -1.0

Power divergence test.

  First argument should be one of:
  
  * contingency table
  * sequence of counts (for goodness of fit)
  * sequence of data (for goodness of fit against distribution)

  For goodness of fit there are two options:
  
  * comparison of observed counts vs expected probabilities or weights (`:p`)
  * comparison of data against given distribution (`:p`), in this case histogram from data is created and compared to distribution PDF in bins ranges. Use `:bins` option to control histogram creation.

  Options are:
  
  * `:lambda` - test type:
      * `1.0` - [chisq-test](#LOS-chisq-test)
      * `0.0` - [multinomial-likelihood-ratio-test](#LOS-multinomial-likelihood-ratio-test)
      * `-1.0` - [minimum-discrimination-information-test](#LOS-minimum-discrimination-information-test)
      * `-2.0` - [neyman-modified-chisq-test](#LOS-neyman-modified-chisq-test)
      * `-0.5` - [freeman-tukey-test](#LOS-freeman-tukey-test)
      * `2/3` - [cressie-read-test](#LOS-cressie-read-test) - default
  * `:p` - probabilites, weights or distribution object.
  * `:alpha` - significance level (default: 0.05)
  * `:ci-sides` - confidence interval sides (default: `:two-sided`)
  * `:sides`  - p-value sides (`:two-sided`, `:one-side-greater` - default, `:one-side-less`)
  * `:bootstrap-samples` - number of samples to estimate confidence intervals (default: 1000)
  * `:ddof` - delta degrees of freedom, adjustment for dof (default: 0.0)
  * `:bins` - number of bins or estimator name for histogram


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2900">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-mode"></span>
```


#### mode

+ `(mode vs method)`
+ `(mode vs method opts)`
+ `(mode vs)`

Find the value that appears most often in a dataset `vs`.

  For sample from continuous distribution, three algorithms are possible:
  * `:histogram` - calculated from [histogram](#LOS-histogram)
  * `:kde` - calculated from KDE
  * `:pearson` - mode = mean-3(median-mean)
  * `:default` - discrete mode

  Histogram accepts optional `:bins` (see [histogram](#LOS-histogram)). KDE method accepts `:kde` for kernel name (default `:gaussian`) and `:bandwidth` (auto). Pearson can accept `:estimation-strategy` for median.

  See also [modes](#LOS-modes).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L586">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-modes"></span>
```


#### modes

+ `(modes vs method)`
+ `(modes vs method opts)`
+ `(modes vs)`

Find the values that appears most often in a dataset `vs`.

  Returns sequence with all most appearing values in increasing order.

  See also [mode](#LOS-mode).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L555">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-modified-power-transformation"></span>
```


#### modified-power-transformation

+ `(modified-power-transformation xs)`
+ `(modified-power-transformation xs lambda)`
+ `(modified-power-transformation xs lambda alpha)`

Modified power transformation (Box-Cox transformation) of data.

  There is no scaling by geometric mean.

  Arguments:
  * `lambda` - power parameter (default: 0.0)
  * `alpha` - shift parameter (optional)


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L3124">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-moment"></span>
```


#### moment

+ `(moment vs)`
+ `(moment vs order)`
+ `(moment vs order {:keys [absolute? center mean? normalize?], :or {mean? true}})`

Calculate moment (central or/and absolute) of given order (default: 2).

  Additional parameters as a map:

  * `:absolute?` - calculate sum as absolute values (default: `false`)
  * `:mean?` - returns mean (proper moment) or just sum of differences (default: `true`)
  * `:center` - value of center (default: `nil` = mean)
  * `:normalize?` - apply normalization by standard deviation to the order power


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L632">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-mse"></span>
```


#### mse

+ `(mse [vs1 vs2-or-val])`
+ `(mse vs1 vs2-or-val)`

Mean squared error


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1081">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-multinomial-likelihood-ratio-test"></span>
```


#### multinomial-likelihood-ratio-test

+ `(multinomial-likelihood-ratio-test contingency-table-or-xs)`
+ `(multinomial-likelihood-ratio-test contingency-table-or-xs params)`

Multinomial likelihood ratio test, a power divergence test for `lambda` 0.0

Power divergence test.

  First argument should be one of:
  
  * contingency table
  * sequence of counts (for goodness of fit)
  * sequence of data (for goodness of fit against distribution)

  For goodness of fit there are two options:
  
  * comparison of observed counts vs expected probabilities or weights (`:p`)
  * comparison of data against given distribution (`:p`), in this case histogram from data is created and compared to distribution PDF in bins ranges. Use `:bins` option to control histogram creation.

  Options are:
  
  * `:lambda` - test type:
      * `1.0` - [chisq-test](#LOS-chisq-test)
      * `0.0` - [multinomial-likelihood-ratio-test](#LOS-multinomial-likelihood-ratio-test)
      * `-1.0` - [minimum-discrimination-information-test](#LOS-minimum-discrimination-information-test)
      * `-2.0` - [neyman-modified-chisq-test](#LOS-neyman-modified-chisq-test)
      * `-0.5` - [freeman-tukey-test](#LOS-freeman-tukey-test)
      * `2/3` - [cressie-read-test](#LOS-cressie-read-test) - default
  * `:p` - probabilites, weights or distribution object.
  * `:alpha` - significance level (default: 0.05)
  * `:ci-sides` - confidence interval sides (default: `:two-sided`)
  * `:sides`  - p-value sides (`:two-sided`, `:one-side-greater` - default, `:one-side-less`)
  * `:bootstrap-samples` - number of samples to estimate confidence intervals (default: 1000)
  * `:ddof` - delta degrees of freedom, adjustment for dof (default: 0.0)
  * `:bins` - number of bins or estimator name for histogram


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2894">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-neyman-modified-chisq-test"></span>
```


#### neyman-modified-chisq-test

+ `(neyman-modified-chisq-test contingency-table-or-xs)`
+ `(neyman-modified-chisq-test contingency-table-or-xs params)`

Neyman modifield chi square test, a power divergence test for `lambda` -2.0

Power divergence test.

  First argument should be one of:
  
  * contingency table
  * sequence of counts (for goodness of fit)
  * sequence of data (for goodness of fit against distribution)

  For goodness of fit there are two options:
  
  * comparison of observed counts vs expected probabilities or weights (`:p`)
  * comparison of data against given distribution (`:p`), in this case histogram from data is created and compared to distribution PDF in bins ranges. Use `:bins` option to control histogram creation.

  Options are:
  
  * `:lambda` - test type:
      * `1.0` - [chisq-test](#LOS-chisq-test)
      * `0.0` - [multinomial-likelihood-ratio-test](#LOS-multinomial-likelihood-ratio-test)
      * `-1.0` - [minimum-discrimination-information-test](#LOS-minimum-discrimination-information-test)
      * `-2.0` - [neyman-modified-chisq-test](#LOS-neyman-modified-chisq-test)
      * `-0.5` - [freeman-tukey-test](#LOS-freeman-tukey-test)
      * `2/3` - [cressie-read-test](#LOS-cressie-read-test) - default
  * `:p` - probabilites, weights or distribution object.
  * `:alpha` - significance level (default: 0.05)
  * `:ci-sides` - confidence interval sides (default: `:two-sided`)
  * `:sides`  - p-value sides (`:two-sided`, `:one-side-greater` - default, `:one-side-less`)
  * `:bootstrap-samples` - number of samples to estimate confidence intervals (default: 1000)
  * `:ddof` - delta degrees of freedom, adjustment for dof (default: 0.0)
  * `:bins` - number of bins or estimator name for histogram


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2906">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-normality-test"></span>
```


#### normality-test

+ `(normality-test xs)`
+ `(normality-test xs params)`
+ `(normality-test xs skew kurt {:keys [sides], :or {sides :one-sided-greater}})`

Normality test based on skewness and kurtosis


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2511">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-omega-sq"></span>
```


#### omega-sq

+ `(omega-sq [group1 group2])`
+ `(omega-sq group1 group2)`
+ `(omega-sq group1 group2 degrees-of-freedom)`

Adjusted R2


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1693">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-one-way-anova-test"></span>
```


#### one-way-anova-test

+ `(one-way-anova-test xss)`
+ `(one-way-anova-test xss {:keys [sides], :or {sides :one-sided-greater}})`


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2956">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-outer-fence-extent"></span>
```


#### outer-fence-extent

+ `(outer-fence-extent vs)`
+ `(outer-fence-extent vs estimation-strategy)`

Returns LOF, UOF and median


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L493">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-outliers"></span>
```


#### outliers

+ `(outliers vs)`
+ `(outliers vs estimation-strategy)`
+ `(outliers vs q1 q3)`

Find outliers defined as values outside inner fences.

  Let Q1 is 25-percentile and Q3 is 75-percentile. IQR is `(- Q3 Q1)`.

  * LIF (Lower Inner Fence) equals `(- Q1 (* 1.5 IQR))`.
  * UIF (Upper Inner Fence) equals `(+ Q3 (* 1.5 IQR))`.

  Returns a sequence of outliers.

  Optional `estimation-strategy` argument can be set to change quantile calculations estimation type. See [estimation-strategies](#LOS-estimation-strategies).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L501">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-p-overlap"></span>
```


#### p-overlap

+ `(p-overlap [group1 group2])`
+ `(p-overlap group1 group2)`
+ `(p-overlap group1 group2 {:keys [kde bandwidth min-iterations steps], :or {kde :gaussian, min-iterations 3, steps 500}})`

Overlapping index, kernel density approximation


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1622">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-p-value"></span>
```


#### p-value

+ `(p-value stat)`
+ `(p-value distribution stat)`
+ `(p-value distribution stat sides)`

Calculate p-value for given distribution (default: N(0,1)), `stat`  and sides (one of `:two-sided`, `:one-sided-greater` or `:one-sided-less`/`:one-sided`).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2450">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-pacf"></span>
```


#### pacf

+ `(pacf data)`
+ `(pacf data lags)`

Caluclate pacf (partial autocorrelation function) for given number of lags.

  If lags is omitted function returns maximum possible number of lags.

  `pacf` returns also lag `0` (which is `0.0`).

  See also [acf](#LOS-acf), [acf-ci](#LOS-acf-ci), [pacf-ci](#LOS-pacf-ci)


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2199">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-pacf-ci"></span>
```


#### pacf-ci

+ `(pacf-ci data)`
+ `(pacf-ci data lags)`
+ `(pacf-ci data lags alpha)`

[pacf](#LOS-pacf) with added confidence interval data.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2228">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-pearson-correlation"></span>
```


#### pearson-correlation

+ `(pearson-correlation [vs1 vs2])`
+ `(pearson-correlation vs1 vs2)`

Pearson's correlation of two sequences.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L971">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-pearson-r"></span>
```


#### pearson-r

+ `(pearson-r [group1 group2])`
+ `(pearson-r group1 group2)`

Pearson `r` correlation coefficient


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1668">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-percentile"></span>
```


#### percentile

+ `(percentile vs p)`
+ `(percentile vs p estimation-strategy)`

Calculate percentile of a `vs`.

  Percentile `p` is from range 0-100.

  See [docs](http://commons.apache.org/proper/commons-math/javadocs/api-3.4/org/apache/commons/math3/stat/descriptive/rank/Percentile.html).

  Optionally you can provide `estimation-strategy` to change interpolation methods for selecting values. Default is `:legacy`. See more [here](http://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)

  See also [quantile](#LOS-quantile).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L90">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-percentile-bc-extent"></span>
```


#### percentile-bc-extent

+ `(percentile-bc-extent vs)`
+ `(percentile-bc-extent vs p)`
+ `(percentile-bc-extent vs p1 p2)`
+ `(percentile-bc-extent vs p1 p2 estimation-strategy)`

Return bias corrected percentile range and mean for bootstrap samples.
  See https://projecteuclid.org/euclid.ss/1032280214

  `p` - calculates extent of bias corrected `p` and `100-p` (default: `p=2.5`)

  Set `estimation-strategy` to `:r7` to get the same result as in R `coxed::bca`.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2301">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-percentile-bca-extent"></span>
```


#### percentile-bca-extent

+ `(percentile-bca-extent vs)`
+ `(percentile-bca-extent vs p)`
+ `(percentile-bca-extent vs p1 p2)`
+ `(percentile-bca-extent vs p1 p2 estimation-strategy)`
+ `(percentile-bca-extent vs p1 p2 accel estimation-strategy)`

Return bias corrected percentile range and mean for bootstrap samples. Also accounts for variance
   variations throught the accelaration parameter.
  See https://projecteuclid.org/euclid.ss/1032280214

  `p` - calculates extent of bias corrected `p` and `100-p` (default: `p=2.5`)

  Set `estimation-strategy` to `:r7` to get the same result as in R `coxed::bca`.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2282">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-percentile-extent"></span>
```


#### percentile-extent

+ `(percentile-extent vs)`
+ `(percentile-extent vs p)`
+ `(percentile-extent vs p1 p2)`
+ `(percentile-extent vs p1 p2 estimation-strategy)`

Return percentile range and median.

  `p` - calculates extent of `p` and `100-p` (default: `p=25`)


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L379">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-percentiles"></span>
```


#### percentiles

+ `(percentiles vs)`
+ `(percentiles vs ps)`
+ `(percentiles vs ps estimation-strategy)`

Calculate percentiles of a `vs`.

  Percentiles are sequence of values from range 0-100.

  See [docs](http://commons.apache.org/proper/commons-math/javadocs/api-3.4/org/apache/commons/math3/stat/descriptive/rank/Percentile.html).

  Optionally you can provide `estimation-strategy` to change interpolation methods for selecting values. Default is `:legacy`. See more [here](http://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)

  See also [quantile](#LOS-quantile).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L106">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-pi"></span>
```


#### pi

+ `(pi vs)`
+ `(pi vs size)`
+ `(pi vs size estimation-strategy)`

Returns PI as a map, quantile intervals based on interval size.

  Quantiles are `(1-size)/2` and `1-(1-size)/2`


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L405">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-pi-extent"></span>
```


#### pi-extent

+ `(pi-extent vs)`
+ `(pi-extent vs size)`
+ `(pi-extent vs size estimation-strategy)`

Returns PI extent, quantile intervals based on interval size + median.

  Quantiles are `(1-size)/2` and `1-(1-size)/2`


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L419">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-pooled-stddev"></span>
```


#### pooled-stddev

+ `(pooled-stddev groups)`
+ `(pooled-stddev groups method)`

Calculate pooled standard deviation for samples and method


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1500">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-pooled-variance"></span>
```


#### pooled-variance

+ `(pooled-variance groups)`
+ `(pooled-variance groups method)`

Calculate pooled variance for samples and method.

  Methods:
  * `:unbiased` - sqrt of weighted average of variances (default)
  * `:biased` - biased version of `:unbiased`
  * `:avg` - sqrt of average of variances


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1482">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-population-stddev"></span>
```


#### population-stddev

+ `(population-stddev vs)`
+ `(population-stddev vs mu)`

Calculate population standard deviation of `vs`.

  See [stddev](#LOS-stddev).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L304">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-population-variance"></span>
```


#### population-variance

+ `(population-variance vs)`
+ `(population-variance vs mu)`

Calculate population variance of `vs`.

  See [variance](#LOS-variance).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L268">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-population-wstddev"></span>
```


#### population-wstddev

+ `(population-wstddev vs weights)`

Calculate population weighted standard deviation of `vs`


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L313">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-population-wvariance"></span>
```


#### population-wvariance

+ `(population-wvariance vs freqs)`

Calculate population weighted variance of `vs`.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L277">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-power-divergence-test"></span>
```


#### power-divergence-test

+ `(power-divergence-test contingency-table-or-xs)`
+ `(power-divergence-test contingency-table-or-xs {:keys [lambda ci-sides sides p alpha bootstrap-samples ddof bins], :or {lambda m/TWO_THIRD, sides :one-sided-greater, ci-sides :two-sided, alpha 0.05, bootstrap-samples 1000, ddof 0}})`

Power divergence test.

  First argument should be one of:
  
  * contingency table
  * sequence of counts (for goodness of fit)
  * sequence of data (for goodness of fit against distribution)

  For goodness of fit there are two options:
  
  * comparison of observed counts vs expected probabilities or weights (`:p`)
  * comparison of data against given distribution (`:p`), in this case histogram from data is created and compared to distribution PDF in bins ranges. Use `:bins` option to control histogram creation.

  Options are:
  
  * `:lambda` - test type:
      * `1.0` - [chisq-test](#LOS-chisq-test)
      * `0.0` - [multinomial-likelihood-ratio-test](#LOS-multinomial-likelihood-ratio-test)
      * `-1.0` - [minimum-discrimination-information-test](#LOS-minimum-discrimination-information-test)
      * `-2.0` - [neyman-modified-chisq-test](#LOS-neyman-modified-chisq-test)
      * `-0.5` - [freeman-tukey-test](#LOS-freeman-tukey-test)
      * `2/3` - [cressie-read-test](#LOS-cressie-read-test) - default
  * `:p` - probabilites, weights or distribution object.
  * `:alpha` - significance level (default: 0.05)
  * `:ci-sides` - confidence interval sides (default: `:two-sided`)
  * `:sides`  - p-value sides (`:two-sided`, `:one-side-greater` - default, `:one-side-less`)
  * `:bootstrap-samples` - number of samples to estimate confidence intervals (default: 1000)
  * `:ddof` - delta degrees of freedom, adjustment for dof (default: 0.0)
  * `:bins` - number of bins or estimator name for histogram


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2838">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-power-transformation"></span>
```


#### power-transformation

+ `(power-transformation xs)`
+ `(power-transformation xs lambda)`
+ `(power-transformation xs lambda alpha)`

Power transformation of data.

  All values should be positive.

  Arguments:
  * `lambda` - power parameter (default: 0.0)
  * `alpha` - shift parameter (optional)


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L3106">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-powmean"></span>
```


#### powmean

+ `(powmean vs power)`
+ `(powmean vs weights power)`

Generalized power mean


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L240">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-psnr"></span>
```


#### psnr

+ `(psnr [vs1 vs2-or-val])`
+ `(psnr vs1 vs2-or-val)`
+ `(psnr vs1 vs2-or-val max-value)`

Peak signal to noise, `max-value` is maximum possible value (default: max from `vs1` and `vs2`)


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1131">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-quantile"></span>
```


#### quantile

+ `(quantile vs q)`
+ `(quantile vs q estimation-strategy)`

Calculate quantile of a `vs`.

  Quantile `q` is from range 0.0-1.0.

  See [docs](http://commons.apache.org/proper/commons-math/javadocs/api-3.4/org/apache/commons/math3/stat/descriptive/rank/Percentile.html) for interpolation strategy.

  Optionally you can provide `estimation-strategy` to change interpolation methods for selecting values. Default is `:legacy`. See more [here](http://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)

  See also [percentile](#LOS-percentile).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L123">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-quantile-extent"></span>
```


#### quantile-extent

+ `(quantile-extent vs)`
+ `(quantile-extent vs q)`
+ `(quantile-extent vs q1 q2)`
+ `(quantile-extent vs q1 q2 estimation-strategy)`

Return quantile range and median.

  `q` - calculates extent of `q` and `1.0-q` (default: `q=0.25`)


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L392">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-quantiles"></span>
```


#### quantiles

+ `(quantiles vs)`
+ `(quantiles vs qs)`
+ `(quantiles vs qs estimation-strategy)`

Calculate quantiles of a `vs`.

  Quantilizes is sequence with values from range 0.0-1.0.

  See [docs](http://commons.apache.org/proper/commons-math/javadocs/api-3.4/org/apache/commons/math3/stat/descriptive/rank/Percentile.html) for interpolation strategy.

  Optionally you can provide `estimation-strategy` to change interpolation methods for selecting values. Default is `:legacy`. See more [here](http://commons.apache.org/proper/commons-math/javadocs/api-3.6.1/org/apache/commons/math3/stat/descriptive/rank/Percentile.EstimationType.html)

  See also [percentiles](#LOS-percentiles).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L138">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-r2"></span>
```


#### r2

+ `(r2 [vs1 vs2-or-val])`
+ `(r2 vs1 vs2-or-val)`
+ `(r2 vs1 vs2-or-val no-of-variables)`

R2


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1068">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-r2-determination"></span>
```


#### r2-determination

+ `(r2-determination [group1 group2])`
+ `(r2-determination group1 group2)`

Coefficient of determination


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1674">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-rank-epsilon-sq"></span>
```


#### rank-epsilon-sq

+ `(rank-epsilon-sq xs)`

Effect size for Kruskal-Wallis test


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1763">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-rank-eta-sq"></span>
```


#### rank-eta-sq

+ `(rank-eta-sq xs)`

Effect size for Kruskal-Wallis test


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1756">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-remove-outliers"></span>
```


#### remove-outliers

+ `(remove-outliers vs)`
+ `(remove-outliers vs estimation-strategy)`
+ `(remove-outliers vs q1 q3)`

Remove outliers defined as values outside inner fences.

  Let Q1 is 25-percentile and Q3 is 75-percentile. IQR is `(- Q3 Q1)`.

  * LIF (Lower Inner Fence) equals `(- Q1 (* 1.5 IQR))`.
  * UIF (Upper Inner Fence) equals `(+ Q3 (* 1.5 IQR))`.

  Returns a sequence without outliers.

  Optional `estimation-strategy` argument can be set to change quantile calculations estimation type. See [estimation-strategies](#LOS-estimation-strategies).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L527">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-rescale"></span>
```


#### rescale

+ `(rescale vs)`
+ `(rescale vs low high)`

Lineary rascale data to desired range, [0,1] by default


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L932">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-rmse"></span>
```


#### rmse

+ `(rmse [vs1 vs2-or-val])`
+ `(rmse vs1 vs2-or-val)`

Root mean squared error


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1088">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-robust-standardize"></span>
```


#### robust-standardize

+ `(robust-standardize vs)`
+ `(robust-standardize vs q)`

Normalize samples to have median = 0 and MAD = 1.

  If `q` argument is used, scaling is done by quantile difference (Q_q, Q_(1-q)). Set 0.25 for IQR.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L911">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-rows-&gt;contingency-table"></span>
```


#### rows->contingency-table

+ `(rows->contingency-table xss)`


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1778">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-rss"></span>
```


#### rss

+ `(rss [vs1 vs2-or-val])`
+ `(rss vs1 vs2-or-val)`

Residual sum of squares


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1061">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-second-moment"></span>
```


#### second-moment ^~DEPRECATED~^

*Deprecated: Use [moment](#LOS-moment) function*


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L663">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-sem"></span>
```


#### sem

+ `(sem vs)`

Standard error of mean


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L359">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-sem-extent"></span>
```


#### sem-extent

+ `(sem-extent vs)`

 -/+ sem and mean


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L377">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-similarity"></span>
```


#### similarity

+ `(similarity method P-observed Q-expected)`
+ `(similarity method P-observed Q-expected {:keys [bins probabilities? epsilon], :or {probabilities? true, epsilon 1.0E-6}})`

Various PDF similarities between two histograms (frequencies) or probabilities.

  Q can be a distribution object. Then, histogram will be created out of P.

  Arguments:

  * `method` - distance method
  * `P-observed` - frequencies, probabilities or actual data (when Q is a distribution)
  * `Q-expected` - frequencies, probabilities or distribution object (when P is a data)
  
  Options:

  * `:probabilities?` - should P/Q be converted to a probabilities, default: `true`.
  * `:epsilon` - small number which replaces `0.0` when division or logarithm is used`
  * `:bins` - number of bins or bins estimation method, see [histogram](#LOS-histogram).

  The list of methods: `:intersection`, `:czekanowski`, `:motyka`, `:kulczynski`, `:ruzicka`, `:inner-product`, `:harmonic-mean`, `:cosine`, `:jaccard`, `:dice`, `:fidelity`, `:squared-chord`

  See more: Comprehensive Survey on Distance/Similarity Measures between Probability Density Functions by Sung-Hyuk Cha


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1428">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-skewness"></span>
```


#### skewness

+ `(skewness vs)`
+ `(skewness vs typ)`

Calculate skewness from sequence.

  Possible types: `:G1` (default), `:g1` (`:pearson`), `:b1`, `:B1` (`:yule`), `:B3`, `:skew`, `:mode`, `:bowley`, `:hogg` or `:median`.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L732">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-skewness-test"></span>
```


#### skewness-test

+ `(skewness-test xs)`
+ `(skewness-test xs params)`
+ `(skewness-test xs skew {:keys [sides type], :or {sides :two-sided, type :g1}})`

Normality test for skewness.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2462">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-span"></span>
```


#### span

+ `(span vs)`

Width of the sample, maximum value minus minimum value


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L619">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-spearman-correlation"></span>
```


#### spearman-correlation

+ `(spearman-correlation [vs1 vs2])`
+ `(spearman-correlation vs1 vs2)`

Spearman's correlation of two sequences.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L965">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-standardize"></span>
```


#### standardize

+ `(standardize vs)`

Normalize samples to have mean = 0 and stddev = 1.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L906">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-stats-map"></span>
```


#### stats-map

+ `(stats-map vs)`
+ `(stats-map vs estimation-strategy)`

Calculate several statistics of `vs` and return as map.

  Optional `estimation-strategy` argument can be set to change quantile calculations estimation type. See [estimation-strategies](#LOS-estimation-strategies).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L862">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-stddev"></span>
```


#### stddev

+ `(stddev vs)`
+ `(stddev vs mu)`

Calculate standard deviation of `vs`.

  See [population-stddev](#LOS-population-stddev).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L318">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-stddev-extent"></span>
```


#### stddev-extent

+ `(stddev-extent vs)`

 -/+ stddev and mean


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L375">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-sum"></span>
```


#### sum

+ `(sum vs)`

Sum of all `vs` values.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L83">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-t-test-one-sample"></span>
```


#### t-test-one-sample

+ `(t-test-one-sample xs)`
+ `(t-test-one-sample xs m)`

One sample Student's t-test

  * `alpha` - significance level (default: `0.05`)
  * `sides` - one of: `:two-sided`, `:one-sided-less` (short: `:one-sided`) or `:one-sided-greater`
  * `mu` - mean (default: `0.0`)


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2609">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-t-test-two-samples"></span>
```


#### t-test-two-samples

+ `(t-test-two-samples xs ys)`
+ `(t-test-two-samples xs ys {:keys [paired? equal-variances?], :or {paired? false, equal-variances? false}, :as params})`

Two samples Student's t-test

  * `alpha` - significance level (default: `0.05`)
  * `sides` - one of: `:two-sided` (default), `:one-sided-less` (short: `:one-sided`) or `:one-sided-greater`
  * `mu` - mean (default: `0.0`)
  * `paired?` - unpaired or paired test, boolean (default: `false`)
  * `equal-variances?` - unequal or equal variances, boolean (default: `false`)


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2686">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-trim"></span>
```


#### trim

+ `(trim vs)`
+ `(trim vs quantile)`
+ `(trim vs quantile estimation-strategy)`
+ `(trim vs low high nan)`

Return trimmed data. Trim is done by using quantiles, by default is set to 0.2.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L680">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-trim-lower"></span>
```


#### trim-lower

+ `(trim-lower vs)`
+ `(trim-lower vs quantile)`
+ `(trim-lower vs quantile estimation-strategy)`

Trim data below given quanitle, default: 0.2.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L696">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-trim-upper"></span>
```


#### trim-upper

+ `(trim-upper vs)`
+ `(trim-upper vs quantile)`
+ `(trim-upper vs quantile estimation-strategy)`

Trim data above given quanitle, default: 0.2.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L704">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-tschuprows-t"></span>
```


#### tschuprows-t

+ `(tschuprows-t group1 group2)`
+ `(tschuprows-t contingency-table)`

Tschuprows T effect size for discrete data


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1855">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-ttest-one-sample"></span>
```


#### ttest-one-sample ^~DEPRECATED~^

*Deprecated: Use [t-test-one-sample](#LOS-t-test-one-sample)*


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2624">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-ttest-two-samples"></span>
```


#### ttest-two-samples ^~DEPRECATED~^

*Deprecated: Use [t-test-two-samples](#LOS-t-test-two-samples)*


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2713">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-variance"></span>
```


#### variance

+ `(variance vs)`
+ `(variance vs mu)`

Calculate variance of `vs`.

  See [population-variance](#LOS-population-variance).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L286">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-variation"></span>
```


#### variation

+ `(variation vs)`

Coefficient of variation CV = stddev / mean


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L332">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-weighted-kappa"></span>
```


#### weighted-kappa

+ `(weighted-kappa contingency-table)`
+ `(weighted-kappa contingency-table weights)`

Cohen's weighted kappa for indexed contingency table


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1882">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-winsor"></span>
```


#### winsor

+ `(winsor vs)`
+ `(winsor vs quantile)`
+ `(winsor vs quantile estimation-strategy)`
+ `(winsor vs low high nan)`

Return winsorized data. Trim is done by using quantiles, by default is set to 0.2.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L665">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-wmean"></span>
```


#### wmean ^~DEPRECATED~^

*Deprecated: Use `mean`*

+ `(wmean vs)`
+ `(wmean vs weights)`

Weighted mean


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L261">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-wmedian"></span>
```


#### wmedian

+ `(wmedian vs ws)`
+ `(wmedian vs ws method)`

Weighted median.

  Calculation is done using interpolation. There are three methods:
  * `:linear` - linear interpolation, default
  * `:step` - step interpolation
  * `:average` - average of ties

  Based on `spatstat.geom::weighted.quantile` from R.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L201">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-wmw-odds"></span>
```


#### wmw-odds

+ `(wmw-odds [group1 group2])`
+ `(wmw-odds group1 group2)`

Wilcoxon-Mann-Whitney odds


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L1607">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-wquantile"></span>
```


#### wquantile

+ `(wquantile vs ws q)`
+ `(wquantile vs ws q method)`

Weighted quantile.

  Calculation is done using interpolation. There are three methods:
  * `:linear` - linear interpolation, default
  * `:step` - step interpolation
  * `:average` - average of ties

  Based on `spatstat.geom::weighted.quantile` from R.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L172">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-wquantiles"></span>
```


#### wquantiles

+ `(wquantiles vs ws)`
+ `(wquantiles vs ws qs)`
+ `(wquantiles vs ws qs method)`

Weighted quantiles.

  Calculation is done using interpolation. There are three methods:
  * `:linear` - linear interpolation, default
  * `:step` - step interpolation
  * `:average` - average of ties

  Based on `spatstat.geom::weighted.quantile` from R.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L186">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-wstddev"></span>
```


#### wstddev

+ `(wstddev vs freqs)`

Calculate weighted (unbiased) standard deviation of `vs`


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L327">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-wvariance"></span>
```


#### wvariance

+ `(wvariance vs freqs)`

Calculate weighted (unbiased) variance of `vs`.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L295">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-yeo-johnson-transformation"></span>
```


#### yeo-johnson-transformation

+ `(yeo-johnson-transformation xs)`
+ `(yeo-johnson-transformation xs lambda)`
+ `(yeo-johnson-transformation xs lambda alpha)`

Yeo-Johnson transformation

  Arguments:
  * `lambda` - power parameter (default: 0.0)
  * `alpha` - shift parameter (optional)


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L3143">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-z-test-one-sample"></span>
```


#### z-test-one-sample

+ `(z-test-one-sample xs)`
+ `(z-test-one-sample xs m)`

One sample z-test

  * `alpha` - significance level (default: `0.05`)
  * `sides` - one of: `:two-sided`, `:one-sided-less` (short: `:one-sided`) or `:one-sided-greater`
  * `mu` - mean (default: `0.0`)


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2626">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-z-test-two-samples"></span>
```


#### z-test-two-samples

+ `(z-test-two-samples xs ys)`
+ `(z-test-two-samples xs ys {:keys [paired? equal-variances?], :or {paired? false, equal-variances? false}, :as params})`

Two samples z-test

  * `alpha` - significance level (default: `0.05`)
  * `sides` - one of: `:two-sided` (default), `:one-sided-less` (short: `:one-sided`) or `:one-sided-greater`
  * `mu` - mean (default: `0.0`)
  * `paired?` - unpaired or paired test, boolean (default: `false`)
  * `equal-variances?` - unequal or equal variances, boolean (default: `false`)


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/blob/master/src/fastmath/stats.clj#L2715">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<div style="background-color:grey;height:2px;width:100%;"></div>
```



```{=html}
<div><pre><small><small>source: <a href="https://github.com/generateme/fastmath//blob/master/clay/stats.clj">clay/stats.clj</a></small></small></pre></div>
```
