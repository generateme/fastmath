---
format:
  html:
    toc: true
    toc-depth: 5
    theme: [cosmo, ../../clay/custom.scss]
    toc-location: right
    anchor-sections: true
    reference-location: margin
    fontsize: 0.9em
    output-file: fields.html
code-block-background: true

---
<style></style><style>.printedClojure .sourceCode {
  background-color: transparent;
  border-style: none;
}
</style><style>.clay-limit-image-width .clay-image {max-width: 100%}
.clay-side-by-side .sourceCode {margin: 0}
.clay-side-by-side {margin: 1em 0}
</style>
<script src="fields_files/md-default0.js" type="text/javascript"></script><script src="fields_files/md-default1.js" type="text/javascript"></script>

::: {.sourceClojure}
```clojure
(ns fields
  (:require [fastmath.fields :as fields]
            [fastmath.dev.codox :as codox]))
```
:::



# Vector fields {.unnumbered}


## Reference

### fastmath.fields

Vector field functions.

  Vector fields are functions R^2->R^2.

  Names are taken from fractal flames world where such fields are call `variations`. Most implementations are taken from [JWildfire](http://jwildfire.org/) software.

  ### Creation

  To create vector field call [field](#LOS-field) multimethod with name of the field as keyword.

  Some of the vector fields require additional configuration as a map of parameters as keywords and values. Call [parametrization](#LOS-parametrization) to create random one or to merge with provided.

  Additionally you can provide `amount` parameter which is scaling factor for vector field (default: `1.0`).

  ### Derived fields

  You can use several method to derive new vector field from the other one(s). Possible options are:

  * [derivative](#LOS-derivative), [grad-x](#LOS-grad-x), [grad-y](#LOS-grad-y) - directional derivative of the field
  * [sum](#LOS-sum) - sum of two fields
  * [multiply](#LOS-multiply) - multiplication of the fields
  * [composition](#LOS-composition) - composition of the fields
  * [angles](#LOS-angles) - angles of the field vectors

  ### Scalar fields

  You can derive scalar fields from given vector field(s):

  * [jacobian](#LOS-jacobian) - determinant of jacobian matrix
  * [divergence](#LOS-divergence) - divergence of the field
  * [cross](#LOS-cross) - cross product of the fields (as a determinant of the 2x2 matrix of vectors)
  * [dot](#LOS-dot) - dot product
  * [angle-between](#LOS-angle-between) - angle between vectors from fields.

  ### Combinations

  The other option is to create vector field using some of the above possibilities. Combination is a tree of field operations with parametrizations. Functions:

  * [combine](#LOS-combine) - create vector field randomly of from given parametrization.
  * [random-configuration](#LOS-random-configuration) - returns random configuration as a map
  * [randomize-configuration](#LOS-randomize-configuration) - change parametrization for given configuration.


```{=html}
<span id="#LOS-*skip-random-fields*"></span>
```


#### *skip-random-fields*

When random configuration for [combine](#LOS-combine) is used. Skip vector fields which are random.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L162">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-angle-between"></span>
```


#### angle-between

Angle between input vector and result of the vector field.

In case when two vector fields are given, cross product is taken from result of vector fields.

Resulting value is from range `[-PI,PI]`.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L270">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-combine"></span>
```


#### combine

+ `(combine {:keys [type name amount config var step var1 var2]})`
+ `(combine)`

Create composite vector field function based on configuration

  Call without argument to get random vector field.

  Configuration is a tree structure where nodes are one of the following

  * `{:type :variation :name NAME :amount AMOUNT :config CONFIG}` where
      * NAME is variation name (keyword)
      * AMOUNT is scaling factor
      * CONFIG is variation parametrization
  * `{:type :operation :name OPERATION :amount AMOUNT :var1 VAR1 :var2 VAR2}` where
      * OPERATION is one of the operations (see below)
      * AMOUNT is scaling factor
      * VAR1 and VAR2 two variations to combine
  * `{:type :operation :name :derivative :amount AMOUNT :var VAR :step STEP}` where
      * AMOUNT is scaling factor
      * VAR variation, subject to calculate derivative
      * STEP dx and dy value

  Possible OPERATIONs are:

  * `:add` - sum of two variations
  * `:mult` - multiplication
  * `:comp` - composition
  * `:angles` - vector field from angles

  See [random-configuration](#LOS-random-configuration) for example.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L354">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-composition"></span>
```


#### composition

+ `(composition f1 f2 amount)`
+ `(composition f1 f2)`

Compose two vector fields.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L286">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-cross"></span>
```


#### cross

2d cross product (det of the 2x2 matrix) of the input vector and result of the vector field.

In case when two vector fields are given, cross product is taken from results of vector fields.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L262">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-curl"></span>
```


#### curl

+ `(curl f)`
+ `(curl f h)`

Curl (2d version) of the field.

  See: https://youtu.be/rB83DpBJQsE?t=855


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L226">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-derivative"></span>
```


#### derivative

+ `(derivative f amount h)`
+ `(derivative f h)`
+ `(derivative f)`

Calculate directional derivative of fn. Derivative is calculated along [1,1] vector with `h` as a step (default `1.0e-6`).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L174">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-divergence"></span>
```


#### divergence

+ `(divergence f)`
+ `(divergence f h)`

Divergence of the field.

  See: https://youtu.be/rB83DpBJQsE?t=855


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L213">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-dot"></span>
```


#### dot

Dot product of the input vector and result of the vector field.

In case when two vector fields are given, cross product is taken from result of vector fields.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L266">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-field"></span>
```


#### field

Return vector field for given name and options: amount (scaling factor) and parametrization.

  Default scaling factor is 1.0, default parametrization is random.

  Resulting function operates on [Vec2](#LOS-Vec2) type.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L101">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-fields-list"></span>
```


#### fields-list


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L155">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-fields-list-not-random"></span>
```


#### fields-list-not-random


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L152">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-fields-list-random"></span>
```


#### fields-list-random


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L148">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-fields-map"></span>
```


#### fields-map


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L156">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-grad-x"></span>
```


#### grad-x

+ `(grad-x f amount h)`
+ `(grad-x f h)`
+ `(grad-x f)`

Calculate gradient along x axis.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L183">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-grad-y"></span>
```


#### grad-y

+ `(grad-y f amount h)`
+ `(grad-y f h)`
+ `(grad-y f)`

Calculate gradient along y axis.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L192">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-heading"></span>
```


#### heading

+ `(heading f)`

Angle of the vectors from field.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L245">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-jacobian"></span>
```


#### jacobian

+ `(jacobian f)`
+ `(jacobian f h)`

Det of Jacobian of the field


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L201">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-magnitude"></span>
```


#### magnitude

+ `(magnitude f)`

Magnitude of the vectors from field.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L239">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-multiplication"></span>
```


#### multiplication

+ `(multiplication f1 f2 amount)`
+ `(multiplication f1 f2)`

Multiply two vector fields (as a element-wise multiplication of results).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L298">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-parametrization"></span>
```


#### parametrization

Return random parametrization map for given field.

  Optinally you can pass part of the parametrization. In this case function will add remaining keys with randomly generated values.

  If field doesn't have parametrization, empty map will be returned.

  See [field](#LOS-field).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L87">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-random-configuration"></span>
```


#### random-configuration

+ `(random-configuration)`
+ `(random-configuration depth)`
+ `(random-configuration depth f)`

Create random configuration for [combine](#LOS-combine) function. Optionally with depth (0 = only root is created).

  See [combine](#LOS-combine) for structure.

  Bind `*skip-random-fields*` to true to exclude fields which are random.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L341">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-random-field"></span>
```


#### random-field

+ `(random-field)`
+ `(random-field depth)`

Create randomized field (optional depth can be provided).


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L396">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-randomize-configuration"></span>
```


#### randomize-configuration

+ `(randomize-configuration f)`

Randomize values for given configuration. Keeps structure untouched.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L323">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-scalar-&gt;vector-field"></span>
```


#### scalar->vector-field

+ `(scalar->vector-field scalar f)`
+ `(scalar->vector-field scalar f1 f2)`

Returns vector field build from scalar fields of the input vector and result of the vector field.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L277">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<span id="#LOS-sum"></span>
```


#### sum

+ `(sum f1 f2 amount)`
+ `(sum f1 f2)`

Add two vector fields.


```{=html}
<div style="text-align: right"><small><a href="https://github.com/generateme/fastmath/tree/3.x/src/fastmath/fields.clj#L292">source</a></small><hr style="margin: 0" /></div>
```



```{=html}
<div style="background-color:grey;height:2px;width:100%;"></div>
```



```{=html}
<div><pre><small><small>source: <a href="https://github.com/generateme/fastmath//blob/master/clay/fields.clj">clay/fields.clj</a></small></small></pre></div>
```
